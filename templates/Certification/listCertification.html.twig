{% extends "baseCertification.html.twig" %}


{% block title %}{{ parent() }}{% endblock %}


{%  block comment  %}<!--Menu just replace the parent with the link here and add the word "active" to the class= for the current page name-->
    <!-- <li class="nav-item active"><a href="" class="nav-link">Forum</a></li> -->{% endblock %}


{% block home %} {{ parent() }} {% endblock %}
{% block about %} {{ parent() }} {% endblock %}
{% block certifications %} <li class="nav-item active hvr-float"><a href="{{ path("certification") }}" class="nav-link">Certifications</a></li>  {% endblock %}
{% block instructors %} {{ parent() }} {% endblock %}
{% block forum %}  {{ parent() }} {% endblock %}
{% block contact %} {{ parent() }} {% endblock %}


{%  block sectionname %} List of Certifications <div id="listcertif"></div>{% endblock %}
{% block sectionmenu %} List of Certifications {% endblock %}


{% block contenu  %}

<div class="row" >

    <div class="col-lg-3 sidebar ">


        {{ form_start(form)}}
        {{ form_widget(form,{'attr': {'class': 'form-control'}}) }}


        {{ form_end(form) }}

</br>
        <div class="sidebar-box bg-white p-4 ftco-animate">
            <h3 class="heading-sidebar ">Category</h3>
            <form action="#" class="browse-form" id="filters">

                {% for c in listCategory %}

                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" onclick="filter()" id="{{ c.id }}" value="{{ c.id }}">
                    <label for="{{ c.id }}" class="custom-control-label" >{{ c.Name}}</label><br>
                    <input type="hidden" id="catid" value="{{ c.id }}">

                </div>
                {% endfor %}

            </form>
        </div>

        <div class="sidebar-box bg-white p-4 ftco-animate">
            <h3 class="heading-sidebar">Company</h3>
            <form action="#" class="browse-form">
                {% for c in listCompany %}
                    <div class="custom-control custom-switch">
                        <input type="checkbox" class="custom-control-input" onclick="filter()" id="{{ c.id }}" value="{{ c.id }}">
                        <label for="{{ c.id }}" class="custom-control-label" >{{ c.Name}}</label><br>
                        <input type="hidden" id="catid" value="{{ c.id }}">

                    </div>
                {% endfor %}


            </form>
        </div>

        <div class="sidebar-box bg-white p-4 ftco-animate">
            <h3 class="heading-sidebar">Difficulty</h3>
            <form action="#" class="browse-form">
                {% for c in listDifficulty %}
                    <div class="custom-control custom-switch">
                        <input type="checkbox" class="custom-control-input" onclick="filter()" id="{{ c.id }}" value="{{ c.id }}">
                        <label for="{{ c.id }}" class="custom-control-label" >{{ c.Name}}</label><br>
                        <input type="hidden" id="catid" value="{{ c.id }}">

                    </div>
                {% endfor %}

            </form>
        </div>
        <div class="heading-sidebar ftco-animate">
          <center>
            <div class="svg-wrapper-red">
                <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
                    <rect id="shape-red" height="40" width="150" />
                    <div id="text" >
                        &nbsp;<a href="{{ path("certification") }}"><span class="spot"></span><span style="color: black;">Reset Filter</span> </a>
                    </div>
                </svg>
            </div>
          </center>

        </div>
        </br>



    </div>

    <div class="col-lg-9" id="content">
        {% if  is_granted('ROLE_MANAGER') or is_granted('ROLE_ADMIN')%}

       <table>
           <tr>

               <td>
                   <div class="svg-wrapper-green ftco-animate" style="margin-left: -1px;">
                       <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
                           <rect id="shape-green" height="40" width="150" />
                           <div id="text" >
                               &nbsp;<a href="{{ path("newtest") }}"><span class="spot"></span><span style="color: #0b7dfd;">+WhiteTest</span> </a>
                           </div>
                       </svg>
                   </div>

               </td>


         <td>

        <div class="svg-wrapper-green ftco-animate" style="margin-left: 176px;">
            <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
                <rect id="shape-green" height="40" width="150" />
                <div id="text" >
                    &nbsp;<a href="{{ path("add_certification") }}"><span class="spot"></span><span style="color: #0b7dfd;">+Certification</span> </a>
                </div>
            </svg>
        </div>
 </td>

<td>

    <div class="svg-wrapper-green ftco-animate" style="margin-left: 190px;">
        <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
            <rect id="shape-green" height="40" width="150" />
            <div id="text" >
                &nbsp;<a href="{{ path("question_crud_new") }}"><span class="spot"></span><span style="color: #0b7dfd;">+Question</span> </a>
            </div>
        </svg>
    </div>
</td>
           </tr>
       </table>
        {% endif %}
    </br>


        <div class="row">
            {% for v in listeCertification %}
                <div class="col-md-6 d-flex align-items-stretch " data-aos="flip-down">
                    <div class="project-wrap hvr-grow-shadow " >
                        <a href="{{ path("showcertif",{'id':v.id}) }}" class="img" style="background-image: url('{{ asset('uploads/'~v.Picture) }}');
                                background-size: 200px 200px;">
                            <span class="price">{{  v.Company.name}}</span>
                        </a>
                        <div class="text p-4">
                            <center><h3><a href="#">{{ v.Title }}</a></h3></center>

                            <ul class="d-flex justify-content-between ">
                                <li><span class="flaticon-shower"></span>{{  v.Category.name}}</li>
                                <li class="price unselectable">{{ v.Difficulty.name}}</li>

                            </ul>
                            {% if  (is_granted('ROLE_MANAGER') and (user.Category.name==v.Category.name or user.Category.name=="admin")) or is_granted('ROLE_ADMIN')%}
                            <ul>
                            <div class="svg-wrapper-red" style="margin-left: -1px;">
                                <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
                                    <rect id="shape-red" height="40" width="150" />
                                    <div id="text" >
                                        &nbsp;<a href="#listcertif" onclick="confdelete()"><span ></span><span style="color: black;">Delete</span> </a>
                                        <input type="hidden" id="cid" value="{{ v.id }}">
                                        <input type="hidden" id="cname" value="{{ v.Title }}">
                                    </div>
                                </svg>
                            </div>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <div class="svg-wrapper" >
                                <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
                                    <rect id="shape" height="40" width="150" />
                                    <div id="text" >
                                        &nbsp;<a href="{{ path("CertificationUpdate" , {'id':v.id})}}"><span class="spot"></span><span style="color: #0b7dfd;">Update</span> </a>
                                    </div>
                                </svg>
                            </div>
                            </ul>
                            {% endif %}
                        </div>
                    </div>
                </div>
                {% else %}
                <h1 style="margin-left: 190px;" class="unselectable hvr-buzz">No Certifications Available</h1>
            {% endfor %}


</div>
        </div>

{% if listeCertification!=null %}
<center>
        <div class="row mt-5 ftco-animate" style="margin-left: 590px;">
            {% do listeCertification.SetPageRange(4) %}
            {{ knp_pagination_render(listeCertification,'pagination/pagination.html.twig') }}
        </div>
</center>
{% endif %}
    </div>
</div>



    <style>
        /*       Just setting CSS for the page   */

        * {
            margin: 0;
            padding: 0;
        }

        html,
        css {
            width: 100%;
            height: 100%;
        }

        .position {
            margin-left: auto;
            margin-right: auto;
            text-align: center;
            margin-top: 15%;
        }

        #workarea {
            position: absolute;
            width: 100%;
            height: 100%;
            background-color: #1e1a3e;
            font-family: Raleway;
        }

        #personal {
            color:white;
            text-decoration:none;
            position:absolute;
            bottom:15px;
            right:2%;
        }
        /*    start code for the actual button:         */


        /*
            Spot is the span on the inside of the href that
            fills the parent and makes the hover and link work
            for the entire div
        */

        .spot {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
        }
        /*
            This is the outer svg wrapper that the SVG itself will
            fill. Multiple svg-wrapper classes can be put side by side.
        */

        .svg-wrapper {
            margin-top: 0;
            position: relative;
            width: 150px;
            /*make sure to use same height/width as in the html*/
            height: 40px;
            display: inline-block;
            border-radius: 3px;
            margin-left: 5px;
            margin-right: 5px
        }
        .svg-wrapper-red {
            margin-top: 0;
            position: relative;
            width: 150px;
            /*make sure to use same height/width as in the html*/
            height: 40px;
            display: inline-block;
            border-radius: 3px;
            margin-left: 5px;
            margin-right: 5px
        }
        .svg-wrapper-green {
            margin-top: 0;
            position: relative;
            width: 150px;
            /*make sure to use same height/width as in the html*/
            height: 40px;
            display: inline-block;
            border-radius: 3px;
            margin-left: 5px;
            margin-right: 5px
        }
        /*
          This is where we define the fill, color, thickness,
          and stroke pattern of the SVG when there is no hover.
          The dasharray and offset together define the line position
          under the words. Here's also where the transition speed is set.
        */

        #shape {
            stroke-width: 6px;
            fill: transparent;
            stroke: #009FFD;
            stroke-dasharray: 85 400;
            stroke-dashoffset: -220;
            transition: 1s all ease;
        }
        #shape-red {
            stroke-width: 6px;
            fill: transparent;
            stroke: darkred;
            stroke-dasharray: 85 400;
            stroke-dashoffset: -220;
            transition: 1s all ease;
        }
        #shape-green {
            stroke-width: 6px;
            fill: transparent;
            stroke: green;
            stroke-dasharray: 85 400;
            stroke-dashoffset: -220;
            transition: 1s all ease;
        }
        /*
            Pushing the text up into the SVG. Without this the
            text would be below the div's.
        */

        #text {
            margin-top: -35px;
            text-align: center;
        }

        #text a {
            color: white;
            text-decoration: none;
            font-weight: 100;
            font-size: 1.1em;
        }
        /*
            Changing the shape on hover. I change the color of the stroke,
        make it thinner, then set it to again wrap around the entire parent element.
        */

        .svg-wrapper:hover #shape {
            stroke-dasharray: 50 0;
            stroke-width: 3px;
            stroke-dashoffset: 0;
            stroke: #06D6A0;
        }
        .svg-wrapper-red:hover #shape-red {
            stroke-dasharray: 50 0;
            stroke-width: 3px;
            stroke-dashoffset: 0;
            stroke: red;
        }
        .svg-wrapper-green:hover #shape-green {
            stroke-dasharray: 50 0;
            stroke-width: 3px;
            stroke-dashoffset: 0;
            stroke: greenyellow;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="sweetalert2.all.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confdelete(){
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Delete The Certification '+document.getElementById("cname").value+' ?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes!',
                cancelButtonText: 'No!',
                reverseButtons: true
            }).then((result) => {

                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        'Certification '+document.getElementById("cname").value+' Deleted!',
                        'The Certification Is Deleted',
                        'Success'
                    );
                    function sleep(ms) {
                        return new Promise(resolve => setTimeout(resolve, ms));
                    }
                    async function valid() {
                        let id=document.getElementById("cid").value;
                        let link="http://localhost:8000/deleteCertification/"+id;
                        await sleep(3000);
                        window.location.replace(link);
                    }
                    valid();
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Be Sure Before Deleting Please :)'
                    )
                }
            });
        }
    </script>
    <script>


        function filter() {

                let array = []
                let checkboxes = document.querySelectorAll('input[type=checkbox]:checked')

                for (let i = 0; i < checkboxes.length; i++) {
                    array.push(checkboxes[i].value)
                }

                if(array.length!=0) {
                    let path = "{{ path("certificationfilter",{"filter":"array"}) }}";
                    path = path.replace("array", array);
                    window.location.replace(path);
                }
                else{
                    window.location.replace("{{ path("certification") }}");
                }
            }

    </script>
    <script>
        w=window.location.href;
        let checkboxes = document.querySelectorAll('input[type=checkbox]')

        if(w!="http://localhost/UpgradeProject/public/index.php/certification/") {
            for (let i = 0; i < checkboxes.length; i++) {
                if (w.indexOf(checkboxes[i].value) != -1) {
                    document.getElementById(checkboxes[i].value).checked = true;
                } else {
                    document.getElementById(checkboxes[i].value).checked = false;

                }
            }
        }


    </script>
    <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>

    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script>
        AOS.init();
    </script>

{% endblock  %}
