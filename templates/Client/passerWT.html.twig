{% block stylesheets %}
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="icon" type="image/x-icon" href="{{ asset("assets/Logo.ico") }}">
    <link rel="stylesheet" href="{{ asset("assets/Client/css/animate.css") }}">

    <link rel="stylesheet" href="{{ asset("assets/Client/css/owl.carousel.min.css") }}">
    <link rel="stylesheet" href="{{ asset("assets/Client/css/owl.theme.default.min.css") }}">
    <link rel="stylesheet" href="{{ asset("assets/Client/css/magnific-popup.css") }}">

    <link rel="stylesheet" href="{{ asset("assets/Client/css/bootstrap-datepicker.css") }}">
    <link rel="stylesheet" href="{{ asset("assets/Client/css/jquery.timepicker.css") }}">


    <link rel="stylesheet" href="{{ asset("assets/Client/css/flaticon.css") }}">
    <link rel="stylesheet" href="{{ asset("assets/Client/css/style.css") }}">
    <link rel="stylesheet" href="{{ asset("assets/Hover-master/css/hover.css") }}">
{% endblock %}

        {% block javascripts %}
            <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee"/><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00"/></svg></div>
            <script src="{{ asset("assets/Client/js/jquery.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/jquery-migrate-3.0.1.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/popper.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/bootstrap.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/jquery.easing.1.3.js") }}"></script>
            <script src="{{ asset("assets/Client/js/jquery.waypoints.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/jquery.stellar.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/owl.carousel.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/jquery.magnific-popup.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/jquery.animateNumber.min.js") }}"></script>
            <script src="{{ asset("assets/Client/js/bootstrap-datepicker.js") }}"></script>
            <script src="{{ asset("assets/Client/js/scrollax.min.js") }}"></script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
            <script src="{{ asset("assets/Client/js/google-map.js") }}"></script>
            <script src="{{ asset("assets/Client/js/main.js") }}"></script>
        {% endblock %}


<div class="background">
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
    <div class="cube"></div>
    
<div class="container">


    <div class="row no-gutters slider-text align-items-end justify-content-center" >
        <div class="col-md-9 text-center">
            <p class="breadcrumbs"><span class="mr-2"><a href="">Home <i class="fa fa-chevron-right"></i></a></span> <span>{% block sectionmenu %} {{ whitetest }} {% endblock %}<i class="fa fa-chevron-right"></i></span></p>
            <h1 class="mb-0 bread" >{% block sectionname %}Question Number {{ i+1 }}{% endblock %}</h1>
        </div>
    </div>
</div>



{% block div %}<div id="quiz"></div>{% endblock %}

<div class="d-flex justify-content-center" id="quiz">



    <h4><div style="float: right;color:white;" class="unselectable" style="z-index: 103;">Question Time Ends In
       <span id="time" >{{ question.Duration }}</span>
        Minutes!</div></h4>
</div>
    </br>
    </br>
<div class="d-flex justify-content-center" >


<table border="1" class="table-hover table-dark table overlay"  style="position: absolute;width: 50%;"id="refresh-section">

    <tr><td align="center" class="unselectable">{{ question.Question }}</td><tr>

    <tr><td align="center"><a onclick="confA()" href="#quiz">{{ question.ChoiceA }}</a></td><tr>

    <tr><td align="center"><a onclick="confB()" href="#quiz">{{ question.ChoiceB }}</a></td></tr>

    {% if question.ChoiceC!=null %}<tr><td align="center"><a onclick="confC()" href="#quiz">{{ question.ChoiceC }}</a></td></tr>{% endif %}

</table>

    <div class="svg-wrapper" style="float: left;margin-top: 500px">
        <svg height="40" width="150" xmlns="http://www.w3.org/2000/svg">
            <rect id="shape"  height="40" width="150" />
            <div id="text" >
                &nbsp;<a href="#quiz" onclick="confD()"><span class="spot"></span><span style="color: white;">Cancel</span></a>
            </div>
        </svg>
    </div>

    <style>
        /*       Just setting CSS for the page   */

        * {
            margin: 0;
            padding: 0;
        }

        html,
        css {
            width: 100%;
            height: 100%;
        }

        .position {
            margin-left: auto;
            margin-right: auto;
            text-align: center;
            margin-top: 15%;
        }

        #workarea {
            position: absolute;
            width: 100%;
            height: 100%;
            background-color: #1e1a3e;
            font-family: Raleway;
        }

        #personal {
            color:white;
            text-decoration:none;
            position:absolute;
            bottom:15px;
            right:2%;
        }
        /*    start code for the actual button:         */


        /*
            Spot is the span on the inside of the href that
            fills the parent and makes the hover and link work
            for the entire div
        */

        .spot {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
        }
        /*
            This is the outer svg wrapper that the SVG itself will
            fill. Multiple svg-wrapper classes can be put side by side.
        */

        .svg-wrapper {
            margin-top: 0;
            position: relative;
            width: 150px;
            /*make sure to use same height/width as in the html*/
            height: 40px;
            display: inline-block;
            border-radius: 3px;
            margin-left: 5px;
            margin-right: 5px
        }
        /*
          This is where we define the fill, color, thickness,
          and stroke pattern of the SVG when there is no hover.
          The dasharray and offset together define the line position
          under the words. Here's also where the transition speed is set.
        */

        #shape {
            stroke-width: 6px;
            fill: transparent;
            stroke: darkred;
            stroke-dasharray: 85 400;
            stroke-dashoffset: -220;
            transition: 1s all ease;
        }
        /*
            Pushing the text up into the SVG. Without this the
            text would be below the div's.
        */

        #text {
            margin-top: -35px;
            text-align: center;
        }

        #text a {
            color: white;
            text-decoration: none;
            font-weight: 100;
            font-size: 1.1em;
        }
        /*
            Changing the shape on hover. I change the color of the stroke,
        make it thinner, then set it to again wrap around the entire parent element.
        */

        .svg-wrapper:hover #shape {
            stroke-dasharray: 50 0;
            stroke-width: 3px;
            stroke-dashoffset: 0;
            stroke: red;
        }
    </style>

</div></br>
</div>
<!--Timer-->
    <script type="text/javascript" >
        function startTimer(duration, display) {
            let timer = duration, minutes, seconds;
            setInterval(function () {
                minutes = parseInt(timer / 60, 10);
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                display.textContent = minutes + ":" + seconds;
                if(timer <=30){
                        document.getElementById("time").style.color="red";
                    document.getElementById("time").classList.add("hvr-pulse-grow-auto");
                }
                if (--timer < 0) {
                    timer = duration;
                    {% set out=0 %} ;
                    {% if  out==0 %}window.location.replace("{{ path('passerWT', {'id': whitetestid,'i':i+1,"answer":"nothing",'score':score} ) }}");
                    {% endif %};
                }
            }, 1000);
        }


            let Minutes = 60 * parseInt({{ question.Duration }}, 10),
                display = document.querySelector('#time');

            startTimer(Minutes, display);


    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.0/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            $("body").on("contextmenu", function(e) {
                return false;
            });
        });
    </script>
<!--No Back And Unselectable-->
    <style>
        /* unvisited link */
        a:link {
            color: white;
        }

        /* visited link */
        a:visited {
            color: white;
        }

        /* mouse over link */
        a:hover {
            color: greenyellow;
        }

        /* selected link */
        a:active {
            color: blue;
        }
    </style>
    <style>
        .unselectable {
            -webkit-user-select: none;
            -webkit-touch-callout: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
    </style>

    <script src=
            "https://code.jquery.com/jquery-3.6.0.min.js"
            integrity=
            "sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
            crossorigin="anonymous">
    </script>
<script>
    $(document).ready(function() {
        function disableBack() {
            window.history.forward();
        }
        window.onload = disableBack();
        window.onpageshow = function(e) {
            if (e.persisted)
                disableBack();
        }
    });
</script>

<!--Confirmation Box-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="sweetalert2.all.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confA(){
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes!',
                cancelButtonText: 'No!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        'Saved!',
                        'Your Answer Is Saved.',
                        'Success'
                    );
                    function sleep(ms) {
                        return new Promise(resolve => setTimeout(resolve, ms));
                    }
                    async function valid() {
                        await sleep(3000);
                        window.location.replace("{{ path('passerWT', {'id': whitetestid,'i':i+1,"answer":"A",'score':score} ) }}");
                    }
                    valid();
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Review Your Answer Please :)'
                    )
                }
            });
        }

        function confB(){
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes!',
                cancelButtonText: 'No!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        'Saved!',
                        'Your Answer Is Saved.',
                        'Success'
                    )
                    window.location.replace("{{ path('passerWT', {'id': whitetestid,'i':i+1,"answer":"B",'score':score} ) }}");
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Review Your Answer Please :)'
                    )
                }
            });
        }

        function confC(){
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes!',
                cancelButtonText: 'No!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        'Saved!',
                        'Your Answer Is Saved.',
                        'Success'
                    )
                    window.location.replace("{{ path('passerWT', {'id': whitetestid,'i':i+1,"answer":"C",'score':score} ) }}");
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Review Your Answer Please :)'
                    )
                }
            });
        }

        function confD(){
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes!',
                cancelButtonText: 'No!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        'Test Canceled !',
                        'Try Again Later',
                    );
                    function sleep(ms) {
                        return new Promise(resolve => setTimeout(resolve, ms));
                    }
                    async function valid() {
                        await sleep(3000);
                        window.location.replace("{{ path('certification' ) }}");
                    }
                    valid();
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Be Sure Before You Cancel The Test Please :)'
                    )
                }
            });
        }
    </script>

<!--Background-->
<link href="https://fonts.googleapis.com/css?family=Josefin+Sans" rel="stylesheet">
<style>
    body {
        font-family: 'Josefin Sans', sans-serif;
        box-sizing: border-box;
    }
    .container-fluid{
        height: 100%;
        margin: 0;
        padding: 0;
        width: 100%;
        background: #FFF;
    }
    /* ============= Animation background ========= */
    .background {
        background: linear-gradient(132deg, #FC415A, #591BC5, #212335);
        background-size: 400% 400%;
        animation: Gradient 15s ease infinite;
        position: relative;
        height: 100vh;
        width: 100%;
        overflow: hidden;
        padding:0;
        margin:0px;
    }
    .cube {
        position: absolute;
        top: 80vh;
        left: 45vw;
        width: 10px;
        height: 10px;
        border: solid 1px #D7D4E4;
        transform-origin: top left;
        transform: scale(0) rotate(0deg) translate(-50%, -50%);
        animation: cube 12s ease-in forwards infinite;
    }
    .cube:nth-child(2n) {
        border-color: #FFF ;
    }
    .cube:nth-child(2) {
        animation-delay: 2s;
        left: 25vw;
        top: 40vh;
    }
    .cube:nth-child(3) {
        animation-delay: 4s;
        left: 75vw;
        top: 50vh;
    }
    .cube:nth-child(4) {
        animation-delay: 6s;
        left: 90vw;
        top: 10vh;
    }
    .cube:nth-child(5) {
        animation-delay: 8s;
        left: 10vw;
        top: 85vh;
    }
    .cube:nth-child(6) {
        animation-delay: 10s;
        left: 50vw;
        top: 10vh;
    }
    /* ================= Header ============ */
    header{
        position: absolute;
        top:0%;
        left: 0%;
        width:100%;
        margin: 0;
        padding: 0;
    }
    /* navbar */
    nav{
        color: #FFF;
        float: right;
        margin:30px 90px;
    }
    nav ul{
        list-style: none;
    }
    nav ul li {
        float: left;
        transition: .3s;
    }
    nav ul li a{
        text-decoration: none;
        color: #EFEEF5;
        transition: .5;
        font-size: 15px;
        margin-left:16px;
    }
    nav ul li:hover a{
        text-decoration: none;
        color: #591BC5;;
    }
    nav ul li:hover{
        height: 45px;
        padding-top: 30px;
        margin-top: -30px;
        background: #EFEEF5;
        text-decoration: none;
        transform: skew(15deg);
    }
    /* Logo */
    .logo{
        width: 35px;
        height: 35px;
        background: #EFEEF5;
        margin: 40px 63px;
        float: left;
        transform: rotate(-30deg);
    }
    .logo span{
        color: #591BC5;
        font-size: 2em;
        line-height: 1.4;
        padding-left: 5px;
        font-weight: bold;
    }
    /* Header content & title & button*/
    .header-content{
        margin-top:25%;
        text-align: center;
        color:  #EFEEF5;
    }
    .header-content h1{
        text-transform: uppercase;
        font-size: 3em;
        letter-spacing: 1px;
    }
    .header-content p {
        font-size: 20px;
        line-height: 1.5;
        margin: 20px auto;
    }
    .header-content button{
        width: 140px;
        margin:20px 10px;
        color: #591BC5;
        font-size: 17px;
        border:1px solid #EFEEF5;
        font-weight: 500;
        background: #EFEEF5;
        border-radius: 20px;
        padding: 10px;
        cursor:pointer;
        transition: .3s;
    }
    .header-content button:hover{
        border-radius: 0;
    }
    /* Animate Background*/
    @keyframes Gradient {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }
    @keyframes cube {
        from {
            transform: scale(0) rotate(0deg) translate(-50%, -50%);
            opacity: 1;
        }
        to {
            transform: scale(20) rotate(960deg) translate(-50%, -50%);
            opacity: 0;
        }
    }

</style>



